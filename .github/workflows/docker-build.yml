name: Build and Publish image

on:
  push:
    tags:
      - 'v*'
  pull_request:
    types: [opened, reopened, synchronize]

env:
  # If you want to change the path, please set `secrets.IMAGE_PATH` .
  IMAGE_BASE_PATH: "ghcr.io/${{ github.repository_owner }}/electrs"

jobs:
  check_image_env:
    runs-on: ubuntu-24.04
    timeout-minutes: 120
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: stop CI
        if: ${{ github.event_name != 'pull_request' }}
        shell: bash
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ "${{ secrets.REGISTRY_USERNAME }}" != "" ]; then
              exit 0 ;
          fi
          curl -X POST -H "Content-Type: application/json" -H "Authorization: token $TOKEN" https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/cancel
          while true; do echo "Waiting for job to be cancelled"; sleep 5; done

  build_and_push_elements_image:
    runs-on: ubuntu-24.04
    needs: check_image_env
    timeout-minutes: 120
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: "false"

      - name: Get the version
        id: get_version
        run: echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT
        shell: bash

      - name: image path
        id: image_path
        run: |
          if [ "${{ secrets.IMAGE_PATH }}" == "" ]; then
              IMAGE_PATH="${{env.IMAGE_BASE_PATH }}"
          else
              IMAGE_PATH="${{secrets.IMAGE_PATH}}"
          fi
          echo "IMAGE_PATH=$IMAGE_PATH"
          echo "IMAGE_PATH=$IMAGE_PATH" >> $GITHUB_OUTPUT

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        with:
          # list of Docker images to use as base name for tags
          images: name=${{ steps.image_path.outputs.IMAGE_PATH }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=ref,event=tag
            type=semver,pattern={{raw}}
            type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Login to Docker Hub
        if: "github.event_name != 'pull_request' && !contains( steps.image_path.outputs.IMAGE_PATH, 'ghcr.io/' )"
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Login to GitHub Container Registry
        if: "github.event_name != 'pull_request' && contains( steps.image_path.outputs.IMAGE_PATH, 'ghcr.io/' )"
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Build only
        if: ${{ github.event_name == 'pull_request' }}
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Run Trivy vulnerability scanner
        if: ${{ github.event_name != 'pull_request' }}
        uses: aquasecurity/trivy-action@76071ef0d7ec797419534a183b498b4d6366cf37 # 0.31.0
        with:
          image-ref: ${{ steps.image_path.outputs.IMAGE_PATH }}:${{ steps.get_version.outputs.VERSION }}
          format: table
          exit-code: 1
          severity: CRITICAL,HIGH

  build_and_push_bitcoin_image:
    runs-on: ubuntu-24.04
    needs: check_image_env
    timeout-minutes: 120
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: "false"

      - name: Get the version
        id: get_version
        run: echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT
        shell: bash

      - name: image path
        id: image_path
        run: |
          if [ "${{ secrets.IMAGE_PATH }}" == "" ]; then
              IMAGE_PATH="${{env.IMAGE_BASE_PATH }}"
          else
              IMAGE_PATH="${{secrets.IMAGE_PATH}}"
          fi
          echo "IMAGE_PATH=$IMAGE_PATH"
          echo "IMAGE_PATH=$IMAGE_PATH" >> $GITHUB_OUTPUT

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        with:
          # list of Docker images to use as base name for tags
          images: name=${{ steps.image_path.outputs.IMAGE_PATH }}
          # generate Docker tags based on the following events/attributes
          flavor: |
            latest=auto
            suffix=-bitcoin,onlatest=true
          tags: |
            type=ref,event=tag,suffix=-bitcoin
            type=semver,pattern={{raw}},suffix=-bitcoin
            type=sha,suffix=-bitcoin

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Login to Docker Hub
        if: "github.event_name != 'pull_request' && !contains( steps.image_path.outputs.IMAGE_PATH, 'ghcr.io/' )"
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Login to GitHub Container Registry
        if: "github.event_name != 'pull_request' && contains( steps.image_path.outputs.IMAGE_PATH, 'ghcr.io/' )"
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Build only
        if: ${{ github.event_name == 'pull_request' }}
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          file: ./Dockerfile_bitcoin
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          file: ./Dockerfile_bitcoin
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Run Trivy vulnerability scanner
        if: ${{ github.event_name != 'pull_request' }}
        uses: aquasecurity/trivy-action@76071ef0d7ec797419534a183b498b4d6366cf37 # 0.31.0
        with:
          image-ref: ${{ steps.image_path.outputs.IMAGE_PATH }}:${{ steps.get_version.outputs.VERSION }}-bitcoin
          format: table
          exit-code: 1
          severity: CRITICAL,HIGH
